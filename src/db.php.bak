<?php
/**
 * Code Author: SanjayKS
 * Email ID: sanjaykehebbar@gmail.com
 * Version: 1.5.0
 * Info: Added a table for single-use WebSocket authentication tokens.
 * ---------------------------------------------
 * Changelog:
 * - v1.5.0 (2025-10-01): Added 'websocket_tokens' table to support a more
 * robust, stateless authentication method for the terminal.
 * - v1.4.0: Implemented multi-key system for SSH.
 */

function get_db_connection() {
    $db_path = __DIR__ . '/../db/cloudterminal.db';
    if (!is_dir(dirname($db_path))) {
        mkdir(dirname($db_path), 0755, true);
    }
    try {
        $pdo = new PDO('sqlite:' . $db_path);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $pdo;
    } catch (PDOException $e) {
        throw new Exception("Database connection failed.");
    }
}

function initialize_database() {
    $db = get_db_connection();
    
    $users_table_sql = "
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        Fname TEXT NOT NULL, LName TEXT NOT NULL,
        Username TEXT UNIQUE NOT NULL, EmailID TEXT UNIQUE NOT NULL,
        Password TEXT NOT NULL,
        UserType TEXT CHECK(UserType IN ('Admin', 'Faculty', 'Learner')) DEFAULT NULL,
        is_active INTEGER NOT NULL DEFAULT 1
    );";

    $ssh_keys_table_sql = "
    CREATE TABLE IF NOT EXISTS user_ssh_keys (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        key_name TEXT NOT NULL,
        public_key TEXT NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );";

    $machines_table_sql = "
    CREATE TABLE IF NOT EXISTS machines (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        MachineName TEXT NOT NULL,
        IPAddress TEXT NOT NULL,
        Protocol TEXT NOT NULL CHECK(Protocol IN ('SSH', 'RDP'))
    );";

    $permissions_table_sql = "
    CREATE TABLE IF NOT EXISTS user_machine_permissions (
        user_id INTEGER NOT NULL,
        machine_id INTEGER NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        FOREIGN KEY (machine_id) REFERENCES machines(id) ON DELETE CASCADE,
        PRIMARY KEY (user_id, machine_id)
    );";
    
    $logs_table_sql = "
    CREATE TABLE IF NOT EXISTS activity_logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
        actor_id INTEGER, action TEXT NOT NULL,
        target_id INTEGER, details TEXT,
        FOREIGN KEY (actor_id) REFERENCES users(id) ON DELETE SET NULL
    );";

    $tokens_table_sql = "
    CREATE TABLE IF NOT EXISTS websocket_tokens (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        machine_id INTEGER NOT NULL,
        token TEXT NOT NULL UNIQUE,
        expires_at DATETIME NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );";

    $db->exec($users_table_sql);
    $db->exec($ssh_keys_table_sql);
    $db->exec($machines_table_sql);
    $db->exec($permissions_table_sql);
    $db->exec($logs_table_sql);
    $db->exec($tokens_table_sql);
}
?>